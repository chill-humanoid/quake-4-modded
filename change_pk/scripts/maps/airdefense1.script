//------------------------------------------------------------------------------------
// AirDefense1.script
//
// (c) Raven Software 2005
//------------------------------------------------------------------------------------

namespace map_airdefense1	
{
//------------------------------------------------------------------------------------
// Globals
//------------------------------------------------------------------------------------

//has morris met kane yet?
float g_morrisMeetsKane = 0;
float g_killMorrisThread = 0;

//is the "need a medic" badger scene ready?
float g_badgerSceneReady = 0;

//reinforcements in the intro combat room (second pass)
float g_combatReinforcements = 0;

//------------------------------------------------------------------------------------
// Prototypes
//------------------------------------------------------------------------------------

// drag the hapless marine away
void dragMarine();

// intro to jabroni, this is when he wrestles with the grunt
void jabroniWrestle();

//grunt takes a mean shotgun blast here
void gruntBlasted();

//pipes burst, grunt spews out, oh it's good times.
void pipeBustin();

//knocks the player back from the grunt's busting pipes
void playerKnockback();

//send the grunt running toward the pipes, but it's all hokum, we'll just teleport him to the
//right spot when it's time to make him smash
void gruntRunToPipes();

//runs an injured marine through pain anims
void injuredMarineLoop(entity marine, entity doctor);

//handle the dead and skewered marine
void skewerMarine();

//open the doors for the skewering berserker
void openSkewerDoors();

//maintains the big gun
void maintainBigGun();

//determines which cool walker firing anim he'll use
void walkerFireManager(entity entDriver);

void kovitchIdle();
void hillstromHelpsWoundMarine();

//player picks up the medic
void gotMedic();

//morris' conversations at the introduction
void morrisIntroTalkToPlayer();
void morrisIntroLoop();
void _morrisIntroLoop();

//simple AI for the medic
//void medicHealingCheck(entity entMedic);
//void medicHealPlayer(entity entMedic);

//harvester intro 
void vistaHarvesterOne();
void vistaHarvesterTwo();

//this lets the walker fire from various joints, it's all a dirty terrible hack.
void walkerFireFromJoint( float fJoint, entity entWeapon);

//This is the core of the Condor Squad scene.
void millerHelpsWoundedMarine();
void doHeartbeatSound();
//------------------------------------------------------------------------------------
// Functions
//------------------------------------------------------------------------------------
void andersonDragsMedic()
{
	//removed by chillhumanoid
}

float firstHealTime = 0;

//------------------------------------------------------------------------------------
void meetAndersonIntro()
{
	//removed by chillhumanoid
}

// Post heal script for anderson
//------------------------------------------------------------------------------------
void returnAndersonToWork()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void webbSummonsPlayer()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void webbJoinsPlayer()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void webbTakeCover()
{
	//removed by chillhumanoid
}
//------------------------------------------------------------------------------------
void webbPlaysItSafe()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
// drag the hapless marine away
//------------------------------------------------------------------------------------
void dragMarine()	
{
	//removed by chillhumanoid
}

// TODO:  previously called from closeDragDoor()
// sys.wait(1);
// thread playAmbientWithVO(5, 3);

//------------------------------------------------------------------------------------
// unlock the door just before the drag grunt
//------------------------------------------------------------------------------------
void unlockPreDragDoor()
{
	//removed by chillhumanoid
}

// intro to jabroni, this is when he wrestles with the grunt
//------------------------------------------------------------------------------------
void jabroniWrestle()	
{
	//removed by chillhumanoid

}

//grunt takes a mean shotgun blast here
//------------------------------------------------------------------------------------
void gruntBlasted()		
{
	
}

//panel light sequence for climbing out of grunt pit
//panelState 1 open, 0 closed.
float panelState = 0;

void openPanel()
{
	//removed by chillhumanoid 
}

//moves one flyer sprite across the sky over the trenches
//------------------------------------------------------------------------------------
void maintainStroggFlyerSprite(entity entMover, entity fxNormal, entity fxDamage, entity entHangar, entity entTgrEnd, vector vDirection)
{	
	///removed by chillhumanoid
}

//pipes burst, grunt spews out, oh it's good times.
//------------------------------------------------------------------------------------
void pipeBustin()	
{
	//removed by chillhumanoid
}

//knocks the player back from the grunt's busting pipes
//------------------------------------------------------------------------------------
void playerKnockback()	
{
	//removed by chillhumanoid might not make a difference
}

//send the grunt running toward the pipes, but it's all hokum, we'll just teleport him to the
//right spot when it's time to make him smash
//------------------------------------------------------------------------------------
void gruntRunToPipes()	
{
 //removed by chillhumanoid 
}

//runs an injured marine through pain anims
//------------------------------------------------------------------------------------
void injuredMarineLoop(entity marine, entity doctor)	
{
	//removed by chillhumanoid
}	

//morris has a conversation with his radio over the introduction
//------------------------------------------------------------------------------------
void morrisIntroLoop()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void _morrisIntroLoop()	
{
	//removed by chillhumanoid
}

//prevent morris' head anim from spinning his head around.  called in "morrisIntroTalkToPlayer"
void morrisStopLooking()
{
	//removed by chillhumanoid
}

//this is morris talking to the player
//------------------------------------------------------------------------------------
void morrisIntroTalkToPlayer()	
{
	//removed by chillhumanoid
}


//handle the dead and skewered marine
//------------------------------------------------------------------------------------
void skewerMarine()	
{
	//removed by chillhumanoid
}

// open the doors for the skewering berserker.  Called via framecommands from ad_berserker_intro
//------------------------------------------------------------------------------------
void openSkewerDoors()	
{
	//removed by chillhumanoid
}

//open doors and start sequence
void openMedicDoors()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void walkerShoot( entity driver, entity vehicle )
{
	while ( isValidEntity(vehicle) && isValidEntity(driver) && vehicle.getHealth() > 0 )
	{
		driver.fireWeapon(0,.1);
		sys.wait(sys.random(.3)+.1);
	}
}

//----------------------------------------------------------------------------------------------------
void introStrafeRunB()		
{
	//removed by chillhumanoid
}

//----------------------------------------------------------------------------------------------------
void introStrafeRunA()		
{
	//removed by chillhumanoid
}

//----------------------------------------------------------------------------------------------------
void startIntroStrafeRuns()
{
	//removed by chillhumanoid
}

//----------------------------------------------------------------------------------------------------
//determines which cool walker firing anim he'll use
//------------------------------------------------------------------------------------
void walkerFireManager(entity entDriver)	
{
	//removed by chillhumanoid
}

//---------------------------------------------------------------------------------
// void triggerBigGunDust()
//
// This function triggers entities func_fx_cannondust_1 -> func_fx_cannondust_53
//---------------------------------------------------------------------------------
void triggerBigGunDust()
{
	//removed by chillhumanoid
}

//this should get the big gun to turn and fire
//------------------------------------------------------------------------------------
void maintainBigGun()	
{
	//removed by chillhumanoid
}


//fired when the player pics up the medic.
//------------------------------------------------------------------------------------
void gotMedic()	
{
	//removed by chillhumanoid
}

//---------------------------------------------------------------------------
// 
// Badger Squad scenarios
//
//---------------------------------------------------------------------------

// A trio of badger squad are fighting off a strogg, just finishing them up when the player walks in.
void marineBattleInBuilding()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
void startBadgerScene()	
{
	//removed by chillhumanoid
}	

//------------------------------------------------------------------
void kovitchIdle()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
void ensureKovitchIsPlaced()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
void hillstromHelpsWoundMarine()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
// Miller checks out the wounded marine and calls out for help, but
//	signal is jammed - damn squibs!  Only Kane can save us now..
//------------------------------------------------------------------
void millerHelpsWoundedMarine()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
// When player gets close to Miller, Miller gives orders to go get
//	the Anderson (the medic at the start of the map)
//------------------------------------------------------------------
void millerOrdersPlayerToGetMedic()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
void hillstromUnlockDoor()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
void moveHillstrom()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------
// fired when the medic is delivered to the injured marines in the level
//------------------------------------------------------------------
void medicDelivered()	
{
	//removed by chillhumanoid
}

//---------------------------------------------------------------------------
// End of Badger / Medic Scenarios
//---------------------------------------------------------------------------


// this sets off the battle in the intro vista
//------------------------------------------------------------------------------------
void vistaHarvesterIntro()
{
//	sys.trigger( $vista_marine_1);
//	sys.trigger( $vista_marine_2);
//	thread vistaHarvesterOne();
//	thread vistaHarvesterTwo();
}

//------------------------------------------------------------------------------------
void aiScriptedAnimRepeatWait( entity eEnt, string sAnim, float fBlend, float fEndIdle, float fReps )
{
	//removed by chillhumanoid
}


//------------------------------------------------------------------------------------
void vistaNukeHarvester()
{
	//removed by chillhumanoid

}

//------------------------------------------------------------------------------------
void vistaHarvesterOne()
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void vistaHarvesterTwo()	
{
	//removed by chillhumanoid
}

//frame commands for the harvester attacking debris
//------------------------------------------------------------------------------------
void harvesterAttackDebris1()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void harvesterAttackDebris2()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void harvesterAttackDebris3()	
{
	//removed by chillhumanoid
}

// 43 - 123 - firing cannon (full auto or bursts - whatever looks good) at harvester - good accuracy, but the harvester barely feels it.
//------------------------------------------------------------------------------------
void vistaWalkerActions1()	
{
	//removed by chillhumanoid
}

// 166 - 197 - fire rockets salvo at harvester - harvester goes on guard to protect itself
//------------------------------------------------------------------------------------
void vistaWalkerActions2()	
{
	//removed by chillhumanoid
}

//firing cannons and / or rockets
//------------------------------------------------------------------------------------
void vistaWalkerActions3()	
{
	//removed by chillhumanoid
}

//------------------------------------------------------------------------------------
void vistaWalkerActions4()	
{
	//boom!
	//$death.directDamage( $walker_vista_1, "damage_gib");
	//sys.println("not booming here");
	//im leaving this because it's all commented out - chill
}

//a marine gets stuck to the stabby arm of the harvester
//------------------------------------------------------------------------------------
void vistaGrabMarine()	
{
	//removed by chill
}

//------------------------------------------------------------------------------------
void vistaThrowMarine()	
{
	//removed by chill
}

//-------------------------------------------------------------
void doCortezBerserker()
{
	//removed by chill
}

//------------------------------------------------------------------------------------
void cortezIntro()	
{
	//removed by chill
}

//------------------------------------------------------------------------------------
void _cortezVictim( entity victim, entity gibFx, vector impulse, string joint )
{
	//removed by chill
}
//------------------------------------------------------------------------------------
void cortezVictim1()	
{
	//_cortezVictim( $strogg_cortez_1, $fx_death_gib, '0 -10000 10000', "forhead" );
}
//------------------------------------------------------------------------------------
void cortezVictim2()	
{
	//_cortezVictim( $strogg_cortez_2, $fx_death_gib_1, '0 -10000 10000', "forhead" );
}
//------------------------------------------------------------------------------------
void cortezVictim3()	
{
	//_cortezVictim( $cortez_berserker, $fx_death_gib, '0 -40000 40000', "head" );
}

//used to make sure the player knows he got the machinegun even if he has autoswitch off
void switchToMG()
{
	//removed by chill (i need to remember where this is for when im playing my other mod that one shots enemies with a blaster. the auto switch kills me everytime)
}

// When the player returns to the combat room, he'll get some help.
//------------------------------------------------------------------------------------
void combatReinforcements()	
{
	//removed by chill
}

// Medic anderson laments the dead bodies of his comrade
//------------------------------------------------------------------------------------
void andersonSadness()	
{
	//removed by chill
}

//walker_vista_1
//------------------------------------------------------------------------------------
void walkerFireFromJoint( float fJoint, entity entWeapon)	
{
	//removed by chill
}

//------------------------------------------------------------
void doAmbientIntroWalker()
{
	//removed by chill
}

// Explosion that knocks the player out
//------------------------------------------------------------
void introThreeBang()
{
	//removed by chill
}

//------------------------------------------------------------
void levelStart()
{
	//removed by chill
}

// this exists solely to thread the levelStart function, because I was having problems calling level start directly
//	via a frame command
//------------------------------------------------------------
void callLevelStart()
{
	//thread levelStart(); 
	//USE THIS TO START GAME CHILL
}

//------------------------------------------------------------
void checkStartCinematics()
{
	//removed by chill
}

//------------------------------------------------------------
void _startRocketChase()
{
	//removed by chill
}

//------------------------------------------------------------
void startRocketChase()
{
	//thread _startRocketChase();
}

//frame 82
//------------------------------------------------------------
void introCommand()
{
}

//frame 124						
//------------------------------------------------------------
void introRun1()
{
	//aiScriptedAnim(	$ad_intro_char_marine_1, "ad_intro_run1", 0, 0 );
}
//frame 333
//------------------------------------------------------------
void introShooting()
{
	//aiScriptedAnim(	$ad_intro_char_marine_6, "ad_intro_shooting", 0, 0 );
}

//frame 336						
//------------------------------------------------------------
void introRun2()
{
	//aiScriptedAnim(	$ad_intro_char_marine_2, "ad_intro_run2", 0, 0 );
}
//frame 395						
//------------------------------------------------------------
void introRun4()
{
	//aiScriptedAnim(	$ad_intro_char_marine_4, "ad_intro_run4", 0, 0 );
}
//frame 400						
//------------------------------------------------------------
void introRun3()
{
	//aiScriptedAnim(	$ad_intro_char_marine_3, "ad_intro_run3", 0, 0 );
}

//frame 404						
//------------------------------------------------------------
void getUp()
{
	//aiScriptedAnim(	$ad_intro_char_marine_5, "ad_intro_getup", 0, 0 );
}
//frame 445
//------------------------------------------------------------
void cinGetUpVO()
{
	//removed by chill
}
//frame 160
//------------------------------------------------------------
void cinNailed()
{
	sys.trigger( $speaker_nailed_1 );
}

//------------------------------------------------------------
void waitForNailedAnim()
{
	//removed by chill
}

//------------------------------------------------------------
void cinNailedFx()
{
	//removed by chill
}

//frame 190 & 490
//------------------------------------------------------------
void doHeartbeatSound()
{
	//removed by chill
}

//frame 237 & 534
//------------------------------------------------------------
void instantCinBlackout()
{
	//removed by chill
}
// frame 1, 294 & 595
//------------------------------------------------------------
void cinFadeBackIn()
{
	//removed by chill
}

//hides the gui until it's time to use it
void enableLadderGui()
{
	//removed by chill	
}

//------------------------------------------------------------------------------------
void main()
{
	$player1.setHealth( 100 ); // was 72 chillhumanoid
}

}	//end namespace : map_airdefense1
